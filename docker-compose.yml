version: "2"

services:
  mongodb:
    image: mongo:3.0.4
    command: mongod --smallfiles
    ports:
      - "27017:27017"
  neo4j:
    image: neo4j:2.3.0
    ports:
      - "7474:7474"
  eureka:
    build: microservices-eureka/.
    image: ms-eureka 
    working_dir: /
    links:
      - config-server
    ports:
      - "8761:8761"
    entrypoint: ./wait-for-it.sh config-server:8888 -t 60 --
    command: java -Dspring.profiles.active=docker -jar /app.jar
    container_name: ms-eureka
  authserver:
    build: microservices-authserver/.
    image: ms-authserver
    working_dir: /
    links:
      - config-server
    ports:
      - "9999:9999"
    entrypoint: ./wait-for-it.sh config-server:8888 -t 60 --
    command: java -Dspring.profiles.active=docker -jar /app.jar
    container_name: ms-authserver
  hystrix:
    build: microservices-hystrix-dashboard/.
    image: ms-hystrix
    working_dir: /
    ports:
      - "7979:7979"
    entrypoint: ./wait-for-it.sh config-server:8888 -t 60 --
    command: java -Dspring.profiles.active=docker -jar /app.jar
    container_name: ms-hystrix
  config-server:
    build: microservices-config-server/.
    image: ms-confserver
    working_dir: /
    ports:
      - "8888:8888"
    container_name: ms-confserver
  catalog:
    build: microservices-catalog/.
    image: ms-catalog
    working_dir: /
    links:
      - config-server
      - authserver
      - eureka
    ports:
      - "8080:8080"
    entrypoint: ./wait-for-it.sh config-server:8888 -t 60 --
    command: java -Dspring.profiles.active=docker -jar /app.jar
    container_name: ms-catalog
  reviews:
    build: microservices-reviews/.
    image: ms-reviews
    working_dir: /
    links:
      - config-server
      - authserver
      - eureka
      - mongodb
    ports:
      - "8081:8081"
    entrypoint: ./wait-for-it.sh config-server:8888 -t 60 --
    command: java -Dspring.profiles.active=docker -jar /app.jar
    container_name: ms-reviews
  recommendations:
    build: microservices-recommendations/.
    image: ms-recommend
    working_dir: /
    links:
      - config-server
      - authserver
      - eureka
      - neo4j
    ports:
      - "8082:8082"
    entrypoint: ./wait-for-it.sh config-server:8888 -t 60 --
    command: java -Dspring.profiles.active=docker -jar /app.jar
    container_name: ms-recommend
  orders:
    build: microservices-orders/.
    image: ms-orders 
    working_dir: /
    links:
      - config-server
      - authserver
      - eureka
    ports:
      - "8083:8083"
    entrypoint: ./wait-for-it.sh config-server:8888 -t 60 --
    command: java -Dspring.profiles.active=docker -jar /app.jar
    container_name: ms-orders
  gateway:
    build: microservices-api-gateway/.
    image: ms-api-gateway
    working_dir: /
    links:
      - config-server
      - authserver
      - eureka
    ports:
      - "9000:9000"
    entrypoint: ./wait-for-it.sh config-server:8888 -t 60 --
    command: java -Dspring.profiles.active=docker -jar /app.jar
    container_name: ms-api-gateway
